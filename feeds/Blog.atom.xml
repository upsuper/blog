<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>鬼の领地</title><link href="http://upsuper.github.com/blog/" rel="alternate"></link><link href="http://upsuper.github.com/blog/feeds/Blog.atom.xml" rel="self"></link><id>http://upsuper.github.com/blog/</id><updated>2013-02-17T19:28:00+08:00</updated><entry><title>2013年新首页</title><link href="http://upsuper.github.com/blog/new-homepage-2013.html" rel="alternate"></link><updated>2013-02-17T19:28:00+08:00</updated><author><name>Xidorn Quan</name></author><id>tag:upsuper.github.com/blog,2013-02-17:new-homepage-2013.html</id><summary type="html">&lt;p&gt;由于之前跟其他人一起合租的一个虚拟主机空间很快就要到期了，而我的域名 upsuper.org 一直停靠在那上面，没有迁移到自己后来买的 VPS 上，于是今天决定把域名指过去。之前已经花了一番功夫把博客里面的大把文章转移到了这个 GitHub 上面的新博客里，剩下的主要就是首页了。&lt;/p&gt;
&lt;p&gt;当年做的首页很久没有维护了，有一些链接甚至应该已经是死链了。而现在感觉能放上去的链接实在太少了，不好保留原来的样式，所以就新做了一个。既然重新做，这自然又是练手的好时机，一面看看自己（自我感觉良好）的设计，一面学习学习那些新的技术。&lt;/p&gt;
&lt;p&gt;之前在做 &lt;a href="https://github.com/upsuper/white"&gt;white&lt;/a&gt; 这个应用的时候，就研究过 CSS3 里许多有趣的东西，其中不少就被我用在了这次做新首页上。&lt;/p&gt;
&lt;h2&gt;设计&lt;/h2&gt;
&lt;p&gt;参考了 &lt;a href="http://reeoo.com/"&gt;Reeoo&lt;/a&gt; 网站里面的一些设计之后，脑中大概形成了新首页的设计：中间照旧地放上标志性的 Logo，旁边将链接围成一圈，然后绕着中心旋转；作为平衡，在链接圈外加一圈逆向旋转的虚线；鼠标放到链接上时停止旋转，并且呈现某种与所指链接有关的效果。&lt;/p&gt;
&lt;p&gt;以最近所活跃的网站作为链接选择的标准，最后选择了&lt;a href="http://upsuper.github.com/blog/"&gt;这个博客&lt;/a&gt;、&lt;a href="https://twitter.com/upsuperx"&gt;Twitter 页面&lt;/a&gt;、&lt;a href="https://github.com/upsuper"&gt;GitHub 页面&lt;/a&gt;、&lt;a href="http://bangumi.tv/user/upsuper"&gt;Bangumi 页面&lt;/a&gt;和我的 Gmail 地址作为链接。一开始的想法是在鼠标悬停到链接上时将中间的 Logo 换成对应网站的 Logo，但是考察了一圈这几个网站的图片，感觉风格差异太大，放在一起好像很不好看。而且我也不会画画，没法把它们统一风格，于是就作罢了。&lt;/p&gt;
&lt;p&gt;因为不怎么会使用那些画图软件，所以干脆就直接用纸笔来画效果图，在脑子里想象成品应该长的样子。当然我在纸上画画的功力也不怎么样，连一个圆都画不圆，也只是勉强能作为参考的水准。&lt;/p&gt;
&lt;h2&gt;实现&lt;/h2&gt;
&lt;p&gt;因为想到 CSS3 应该已经相当强力了，所以一开始是想完全使用 CSS3 来实现的，想着图形只要用 &lt;code&gt;transform&lt;/code&gt; 变换一下都可以实现，圆形就用 &lt;code&gt;border-radius&lt;/code&gt; 画，旋转动画只要用 &lt;code&gt;animation&lt;/code&gt; 就可以了，这样除了中心的 Logo 以外，便一张图片都不需要了。当然，这种想法是美好的，可惜现实是残酷的：即使是 CSS3 也远没有到我曾经设想的想实现什么就能实现什么的水平，而且浏览器实现还有各种这样那样的问题……&lt;/p&gt;
&lt;h3&gt;扇形链接 问题一&lt;/h3&gt;
&lt;p&gt;第一个遇到的阻碍便是周围绕转的扇形链接，最初的想法如上面说，是希望使用 &lt;code&gt;transform&lt;/code&gt; 这个属性的 &lt;code&gt;matrix&lt;/code&gt; 函数来做任意变换。我总是想着，都能上矩阵了，应该是没什么做不到的吧。在这上面花了不少时间研究，想计算出一个矩阵。最后突然想到，矩阵变换根本不能做非线性运算，也就是说根本不可能把一个矩形变成扇形，遂放弃这种方法。&lt;/p&gt;
&lt;p&gt;虽然放弃用纯 CSS 了，但是不想放弃这个设计，所以就考虑了别的方法。第一个想到的就是 SVG 了，因为 SVG 可以直接内嵌在 HTML 里面，想过去真是方便。但是潜在 HTML 里面的话，又会影响 HTML 的“文档性”，感觉不爽。因此就采用了现在的方法，使用独立的 SVG 图片在 CSS 里面引用其为背景。这种做法也算是一个折中，因为 SVG 也是代码编写的，所以某种意义上也算是没有增加图片的数量吧。&lt;/p&gt;
&lt;h3&gt;扇形链接 问题二&lt;/h3&gt;
&lt;p&gt;这个问题虽然用 SVG 在视觉效果上轻松解决了，但是随之也带来了另一个问题：如何让链接覆盖整个扇形区域呢？如果链接是一块区域的话自然比但只有文字部分更方便点击，但是如果使用普通的矩形块来覆盖的话，相邻的扇形就会有链接重叠的部分，点击的时候就可能进入到预期外的页面，无论如何这样都是非常糟糕的。这个时候又想到了 &lt;code&gt;transform&lt;/code&gt;。&lt;/p&gt;
&lt;div style="float: right;"&gt;&lt;img src="http://upsuper.github.com/blog/static/images/new-homepage-2013-a.png" /&gt;&lt;/div&gt;

&lt;p&gt;这个 &lt;code&gt;transform&lt;/code&gt; 虽然不能把矩形变成扇形，但变成梯形总是可以的吧？因为视觉形状已经由 SVG 图片代劳了，实际链接的有效区域只要保证覆盖必要的区域并且不会相互覆盖即可，多覆盖一些是无所谓的~于是变成梯形，让梯形斜边与扇形两边重合，梯形下底与扇形大弧相切，上底连接小弧两端点即可。&lt;/p&gt;
&lt;p&gt;查了一番资料，一个坏消息和一个好消息。坏消息是，单纯的 2D 变换连梯形都做不出来，好消息是我们还有 3D 变换。结合了 &lt;code&gt;perspective&lt;/code&gt; 和 &lt;code&gt;transform&lt;/code&gt; 两个属性，调了很久终于调成功了。5个连接的实际范围如右图红色部分所示。因为多出来的部分没有相互重合，所以关系不是很大，总之这样在绝大多数情况下对链接的预期和实际情况是相符的。&lt;/p&gt;
&lt;h3&gt;扇形链接 更多问题&lt;/h3&gt;
&lt;p&gt;但是这么做了之后，再次引出一个新的问题 (orz 就这个东西问题真多)：因为链接被变形了，链接里面的文字也扭曲得没法看了。本来试图用 CSS 变换回来，可试来试去效果都不好，最后决定用 JavaScript 将文字提取出来放到链接外面，单独对其设置样式。这样就既保证了 HTML 的文档性，又方便了实现。&lt;/p&gt;
&lt;p&gt;在测试 Chrome 下的情况的时候，出现了一个新的问题是在扇形区域的一些部分，链接是无法点击的。经过研究发现是链接的形状仍为矩形的父元素遮蔽了一部分其他链接的区域。这个解决起来就轻车熟路了，直接将父元素的 &lt;code&gt;pointer-events&lt;/code&gt; 设置为 &lt;code&gt;none&lt;/code&gt;，并将链接的这个属性设置为 &lt;code&gt;auto&lt;/code&gt; 就可以了。这种做法带来的唯一的麻烦是你就通不过 &lt;a href="http://jigsaw.w3.org/css-validator/"&gt;W3C 的 CSS 验证&lt;/a&gt;了，不过无所谓啦这个。&lt;/p&gt;
&lt;h3&gt;虚线外框&lt;/h3&gt;
&lt;p&gt;另一个问题就是外圈反向旋转的虚线，本以为直接使用 &lt;code&gt;border&lt;/code&gt; 的 &lt;code&gt;dashed&lt;/code&gt; 做虚线边框，然后 &lt;code&gt;border-radius&lt;/code&gt; 把它弄成圆的就可以了。这种方法在 Chrome 上是可行的，但是到了 Firefox 上就行不通了：整个圆竟然变成了实线。我在 Mozilla 的 Bugzilla 上面还找到了这个问题相关的 Bug 两枚：&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=382721"&gt;Bug 382721&lt;/a&gt;、&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=652650"&gt;Bug 652650&lt;/a&gt;，看起来也是老问题了，至今没有解决呢。最后无奈，虚线边框也使用 SVG 解决了。&lt;/p&gt;
&lt;h3&gt;旋转与悬浮效果&lt;/h3&gt;
&lt;p&gt;至于旋转并没有花什么力气倒是顺利解决了，毕竟这个就是 CSS3 的主打功能之一。CSS3 的动画用起来还是很方便的，唯一的问题是 WebKit 内核的浏览器还必须使用 &lt;code&gt;-webkit-&lt;/code&gt; 前缀的东西才行。在悬停的时候，使用 &lt;code&gt;animation-play-state: paused&lt;/code&gt; 就可以暂停，一行 JavaScript 都不需要。&lt;/p&gt;
&lt;p&gt;因为放弃了在中间显示图标的设计，最后决定改变背景色。在鼠标悬浮在某个连接时，使用这个网站的印象色作为页面背景色，并且使用 &lt;code&gt;trasition&lt;/code&gt; 来做渐变。为了方便编写，我直接把每个链接对应的色彩写在 &lt;code&gt;dataset&lt;/code&gt; 里。这也算是很轻松地实现了，只是选色选了一会儿。直接截取网站的主要印象色太过于鲜亮了，完全不适合作为背景色，最后还是到维基百科的 &lt;a href="http://en.wikipedia.org/wiki/Web_Colors"&gt;Web colors&lt;/a&gt; 这个条目里挑选了几个淡一些的颜色。&lt;/p&gt;
&lt;h3&gt;关于兼容性&lt;/h3&gt;
&lt;p&gt;因为知道这次用了很多很新的东西，所以彻底放弃对 IE 的支持了，甚至于连要求升级的页面都懒得做了。不过即使是 Firefox 和 Chrome 对我所用的这些特性也仍然达不到完美的程度。属性需要前缀这种事情都已经没什么好说的了。&lt;/p&gt;
&lt;div style="float: right;"&gt;&lt;img src="http://upsuper.github.com/blog/static/images/new-homepage-2013-b.png" /&gt;&lt;/div&gt;

&lt;p&gt;Chrome 里面最让我不满意的一个地方：有问题的 &lt;code&gt;border-radius&lt;/code&gt; 实现。说实话这个东西的问题还真是不少，Firefox 下有虚线变实线的问题，Chrome 下也有 Chrome 的问题，这个问题就是 &lt;code&gt;border-radius&lt;/code&gt; 的边缘不符合预期。为了限制链接不泄露到圆外，同时使得鼠标不在圆内时不会导致旋转暂停，我在整个圆的容器上加上了 &lt;code&gt;border-radius&lt;/code&gt; 把它变成圆形，并且使用 &lt;code&gt;overflow: hidden&lt;/code&gt; 防止任何内部元素泄漏到圆外。这种想法想必是很有意义的，不过能不能实现嘛……&lt;/p&gt;
&lt;p&gt;如右图，左边的是 Firefox 中经过上面处理后的5个链接的有效区域，右边是 Chrome 的。Firefox 在这里很完美地达成了我们的愿望，可是 Chrome 呢……看过去似乎也很努力地想要去实现了，只可惜看起来跟狗啃的一样，和我们的期待相去甚远……本来还想使用中心的 Logo 来屏蔽泄漏到中间部分的链接区域，也因为同样的原因在 Chrome 下无法使用而作罢了。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;总体来说，这真是一篇又臭又长的文章，不过里面用到的一些技巧自认为还蛮有意思的。写出来一方面作为一个记录，另一方面也找点东西填充一下久不更新的博客，毕竟不能每次都开一个新博客然后就没下文了嘛。&lt;/p&gt;
&lt;p&gt;把首页搞定之后，接下来也就是好好琢磨一下怎么整一整这个博客的主题了。之前在 GitHub 上看 &lt;a href="https://github.com/getpelican/pelican-themes/"&gt;Pelican 官方收集的主题&lt;/a&gt;，觉得能看的都没几个，更别说满意的了，果然技术宅们都不怎么擅长设计呢。相比起来，我大概还算不错的了吧？&lt;/p&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mozilla Developer Network: &lt;a href="https://developer.mozilla.org/en-US/docs/CSS"&gt;CSS&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/SVG"&gt;SVG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.useragentman.com/blog/2011/01/07/css3-matrix-transform-for-the-mathematically-challenged/"&gt;The CSS3 matrix() Transform for the Mathematically Challenged&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Homepage"></category><category term="HTML"></category><category term="CSS"></category><category term="SVG"></category></entry><entry><title>在 GitHub 上建一个新的博客</title><link href="http://upsuper.github.com/blog/new-blog-in-github.html" rel="alternate"></link><updated>2012-12-31T00:00:00+08:00</updated><author><name>Xidorn Quan</name></author><id>tag:upsuper.github.com/blog,2012-12-31:new-blog-in-github.html</id><summary type="html">&lt;p&gt;一直想着将技术向博客迁移到 GitHub Pages 上，觉得这样大概可以使我显得更 Geek 一点吧？不过呢，因为一直以来各种事情很多，所以一直没有去做。（其实跟事情多也没什么关系吧，看看你自己都多久没写博客了……）最近看到之前买的虚拟空间快要到期了，因为不怎么打算继续续下去了，所以估量着把里面的东西迁移出来。另一方面，末日的2012过去了，新世界2013年到来了，顺便也就盘算着重新开始写博客？不过果然还是觉得有点麻烦呢……&lt;/p&gt;
&lt;p&gt;既然是将这里定位于技术向的博客的话，自然除了关于这个博客本身的事情以外，其他都是技术讨论了。我其实也一直想把技术之外的一些内容单独放在一个博客里，只不过因为太懒了也是一直没去建的，估计在短时间内也不会去做吧，现在都没什么写东西的激情了呢。&lt;/p&gt;
&lt;p&gt;这个博客的标题“鬼の领地”是延续自之前的博客的，它取自我中二的年代，正如我的常用 ID upsuper 一样。同时与之前我的每一个博客一样，我会把过去的内容挑选一些放入新的博客里面。另外原来参与 &lt;a href="https://twitter.com/fanzeyi"&gt;@fanzeyi&lt;/a&gt; 同学的 &lt;a href="https://github.com/PyCodersCN"&gt;PyCodersCN&lt;/a&gt; 项目的时候翻译过的一些文章也准备放进来。因为实在懒于写自己的东西（大多只是一些小东西，就不想单独写文章了），所以也考虑不定期的译一些自己觉得不错的文章放在这个博客里，就当练练中英文水平好了（其实是为了充数吧）。&lt;/p&gt;
&lt;p&gt;关于这个博客本身，目前是准备使用 &lt;a href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt; 来组织博客，使用 &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; 来编写。很多人都推荐 &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt;，但我始终是觉得那个东西比 Markdown 蛋疼得多。之后一段时间还有许许多多的工作要做呢这个博客，比如主题啦，之前文章的迁移，还有评论系统什么之类的。总之就这样吧，先用起来好了（虽然我觉得我也未必会坚持很久呢）。&lt;/p&gt;</summary><category term="Blog"></category><category term="GitHub"></category></entry></feed>